\begin{Exercise}[title={Strings},difficulty=1]
\label{ex:strings}
<<<<<<< HEAD
\Question \label{ex:strings q1} 建立一个~Go 程序打印下面的内容（到~100 个字符）：
=======
\Question \label{ex:strings q1} Create a Go program that prints
the following (up to 100 characters):
>>>>>>> 9d3c4dbbba2dd6ce9e8c33dbfcbd0d7ca7842eb7
\vskip\baselineskip
\begin{display}
A
AA
AAA
AAAA
AAAAA
AAAAAA
AAAAAAA
...
\end{display}
\vskip\baselineskip

<<<<<<< HEAD
\Question \label{ex:strings q2} 建立一个程序统计字符串里的字符数量：
\begin{display}
asSASA ddd dsjkdsjs dk
\end{display}
同时输出这个字符串的字节数。
\emph{提示：} 看看~\package{unicode/utf8} 包。

\Question \label{ex:string q3} 扩展上一个问题的程序，替换位置~4 开始的三个字符为~``abc''。

\Question \label{ex:string q4} 编写一个~Go 程序可以逆转字符串，例如``foobar''
被打印成``raboof''。
\emph{提示：}不幸的是你需要知道一些关于转换的内容，
参阅``\titleref{sec:conversions}''第~\pageref{sec:conversions} 页的内容。
=======
\Question \label{ex:strings q2} Create a program that counts
the number of characters in this string:
\begin{display}
asSASA ddd dsjkdsjs dk
\end{display}
In addition, make it output the number of bytes in that string.
\emph{Hint}: Check out the \package{utf8} package.

\Question \label{ex:string q3} Extend the program from
the previous question to replace the three runes at
position 4 with 'abc'.

\Question \label{ex:string q4} Write a Go program
that reverses a string, so ``foobar'' is printed as ``raboof''.
\emph{Hint}: You will need to know about
conversion; skip ahead to section ``\titleref{sec:conversions}'' on
page \pageref{sec:conversions}.
>>>>>>> 9d3c4dbbba2dd6ce9e8c33dbfcbd0d7ca7842eb7

\end{Exercise}

\begin{Answer}

<<<<<<< HEAD
\Question 这是一个解法：

\lstinputlisting[label=string1,caption=Strings]{ex-basics/src/string1.go}

\Question 为了解决这个问题，需要~\package{unicode/utf8} 包的帮助。
首先，阅读一下文档~\prog{go doc unicode/utf8 | less}。在阅读文档的时候，会注意到
\lstinline{func RuneCount(p []byte) int}。然后，将~
\emph{string} 转换为~\type{byte} slice：
\begin{lstlisting}
str := "hello"
b   := []byte(str) |\coderemark{转换，参阅第~\pageref{sec:conversions} 页}|
\end{lstlisting}

将这些整合到一起，得到下面的程序。
=======
\Question This program is a solution:

\lstinputlisting[label=string1,caption=Strings]{ex-basics/src/string1.go}

\Question To answer this question we need some help from
the \package{unicode/utf8} package. First we check the documentation
with \prog{go doc unicode/utf8 | less}. When we read the documentation
we notice \lstinline{func RuneCount(p []byte) int}. Secondly
we can convert \emph{string} to a \type{byte} slice with
\begin{lstlisting}
str := "hello"
b   := []byte(str) |\coderemark{Conversion, see page \pageref{sec:conversions}}|
\end{lstlisting}

Putting this together leads to the following program.
>>>>>>> 9d3c4dbbba2dd6ce9e8c33dbfcbd0d7ca7842eb7

\begin{minipage}{\textwidth}
\lstinputlisting[label=src:string2,caption=Runes in strings]{ex-basics/src/string2.go}
\end{minipage}

<<<<<<< HEAD
\Question 可以用下面的方法逆转字符串。我们从左边（\var{i}）至右（\var{j}）的交换字符，就像这样：
=======
\Question Reversing a string can be done as follows. We start from the left (\var{i}) and
the right (\var{j}) and swap the characters as we see them:
>>>>>>> 9d3c4dbbba2dd6ce9e8c33dbfcbd0d7ca7842eb7

\begin{minipage}{\textwidth}
\lstinputlisting[label=src:stringrev,caption=Reverse a string,linerange={3,}]{ex-basics/src/stringrev.go}
\end{minipage}

\end{Answer}
