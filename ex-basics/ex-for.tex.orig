\begin{Exercise}[title={For-loop},difficulty=0]
\label{ex:for-loop}
<<<<<<< HEAD
\Question \label{ex:for-loop q1} 创建一个基于~\key{for} 的简单的循环。
使其循环~10 次，并且使用~\package{fmt} 包打印出计数器的值。

\Question \label{ex:for-loop q2} 用~\key{goto} 改写~\ref{ex:for-loop q1} 的循环。
保留字~\key{for} 不可使用。

\Question \label{ex:for-loop q3} 再次改写这个循环，使其遍历一个~array，并将这个~array 打印到屏幕上。
=======
\Question \label{ex:for-loop q1} Create a simple loop with the \key{for} construct. Make it loop
10 times and print out the loop counter with the \package{fmt} package.

\Question \label{ex:for-loop q2} Rewrite the loop from \ref{ex:for-loop q1}. to use \key{goto}. The
keyword \key{for} may not be used.

\Question \label{ex:for-loop q3} Rewrite the loop again so that it fills an array and then
prints that array to the screen.
>>>>>>> 9d3c4dbbba2dd6ce9e8c33dbfcbd0d7ca7842eb7
\end{Exercise}

\begin{Answer}

<<<<<<< HEAD
\Question 有许多种解法，其中一种可能是：
\lstinputlisting[caption={Simple for loop},label=src:for]{ex-basics/src/for.go}
编译并观察输出。
\vskip\baselineskip
\begin{display}
\pr go build for.go
=======
\Question There are a multitude of possibilities, 
one of the solutions could be:
\lstinputlisting[caption={Simple for loop},label=src:for]{ex-basics/src/for.go}
Let's compile this and look at the output.
\vskip\baselineskip
\begin{display}
\pr go run for.go
>>>>>>> 9d3c4dbbba2dd6ce9e8c33dbfcbd0d7ca7842eb7
\pr ./for
0
1
.
.
.
9
\end{display}
\vskip\baselineskip

<<<<<<< HEAD
\Question 改写的循环最终看起来像这样（仅显示了~\func{main} 函数）：
\begin{lstlisting}
func main() {
        i := 0		|\coderemark{定义循环变量}|
I:			|\coderemark{定义标签}|
        fmt.Printf("%d\n", i)
        i++ 
        if i < 10 {
                goto I	|\coderemark{跳转回标签}|
=======
\Question Rewriting the loop results in code that should look something
like this (only showing the \func{main}-function):
\begin{lstlisting}
func main() {
        i := 0		|\coderemark{Define our loop variable}|
I:			|\coderemark{Define a label}|
        fmt.Printf("%d\n", i)
        i++ 
        if i < 10 {
                goto I	|\coderemark{Jump back to the label}|
>>>>>>> 9d3c4dbbba2dd6ce9e8c33dbfcbd0d7ca7842eb7
        }   
}
\end{lstlisting}

\Question 
<<<<<<< HEAD
下面是可能的解法之一：
\lstinputlisting[label=src:for-arr,caption={For loop with an array},linerange={5,11}]{ex-basics/src/for-arr.go}
也可以用复合声明的硬编码来实现这个：
\begin{lstlisting}
a := [...]int{0,1,2,3,4,5,6,7,8,9} |\coderemark{通过~[...] 让~Go 来计数}|
=======
The following is one possible solution:
\lstinputlisting[label=src:for-arr,caption={For loop with an array},linerange={5,11}]{ex-basics/src/for-arr.go}
You could even do this in one fell swoop by using a composite literal:
\begin{lstlisting}
a := [...]int{0,1,2,3,4,5,6,7,8,9} |\coderemark{With [...] you let Go count}|
>>>>>>> 9d3c4dbbba2dd6ce9e8c33dbfcbd0d7ca7842eb7
fmt.Printf("%v\n", a)
\end{lstlisting}
\end{Answer}
